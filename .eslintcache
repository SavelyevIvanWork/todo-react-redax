[{"/home/user/work/todo-react-redux/src/index.js":"1","/home/user/work/todo-react-redux/src/App.js":"2","/home/user/work/todo-react-redux/src/components/redux/redux-store.js":"3","/home/user/work/todo-react-redux/src/components/redux/TaskReducer.js":"4","/home/user/work/todo-react-redux/src/components/redux/FilterReducer.js":"5","/home/user/work/todo-react-redux/src/components/FormAuthorization/FormAuthorization.jsx":"6","/home/user/work/todo-react-redux/src/components/TodoApp/TodoApp.jsx":"7","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoContainer.jsx":"8","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/Todo.jsx":"9","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoItem/TodoItem.jsx":"10","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoFilter/TodoFilter.jsx":"11","/home/user/work/todo-react-redux/src/components/redux/FormReducer.js":"12","/home/user/work/todo-react-redux/src/components/FormAuthorization/FormAuthorizationContainer.jsx":"13"},{"size":321,"mtime":1611672339626,"results":"14","hashOfConfig":"15"},{"size":905,"mtime":1612524200114,"results":"16","hashOfConfig":"15"},{"size":632,"mtime":1612517827493,"results":"17","hashOfConfig":"15"},{"size":6361,"mtime":1612344166290,"results":"18","hashOfConfig":"15"},{"size":771,"mtime":1611649518035,"results":"19","hashOfConfig":"15"},{"size":2464,"mtime":1612535437161,"results":"20","hashOfConfig":"15"},{"size":346,"mtime":1612354259317,"results":"21","hashOfConfig":"15"},{"size":2213,"mtime":1612352828388,"results":"22","hashOfConfig":"15"},{"size":2698,"mtime":1612353654822,"results":"23","hashOfConfig":"15"},{"size":896,"mtime":1612352828416,"results":"24","hashOfConfig":"15"},{"size":3733,"mtime":1612352828408,"results":"25","hashOfConfig":"15"},{"size":2639,"mtime":1612535236846,"results":"26","hashOfConfig":"15"},{"size":1466,"mtime":1612535367809,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wl74d0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/work/todo-react-redux/src/index.js",[],["57","58"],"/home/user/work/todo-react-redux/src/App.js",[],"/home/user/work/todo-react-redux/src/components/redux/redux-store.js",[],"/home/user/work/todo-react-redux/src/components/redux/TaskReducer.js",[],"/home/user/work/todo-react-redux/src/components/redux/FilterReducer.js",[],"/home/user/work/todo-react-redux/src/components/FormAuthorization/FormAuthorization.jsx",[],"/home/user/work/todo-react-redux/src/components/TodoApp/TodoApp.jsx",[],"/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoContainer.jsx",["59"],"import React from 'react'\nimport {\n    addTaskActionCreator,\n    addTodoActionCreator,\n    addTodoAllActionCreator,\n    addTodoComplitedActionCreator,\n    addTodoDeleteActionCreator,\n    complitedTaskActionCreator,\n    deleteTaskActionCreator, deleteTodoActionCreator,\n    updateNewTaskActionCreator\n} from \"../../redux/TaskReducer\";\nimport {connect} from \"react-redux\";\nimport Todo from \"./Todo\";\n\nconst TodoContainer = (props) => {\n        return <Todo tasks={props.tasks}\n                     filterTodos={props.filterTodos}\n                     onAddTaskClick={props.onAddTaskClick}\n                     onDeleteTaskClick={props.onDeleteTaskClick}\n                     onComplitedTaskClick={props.onComplitedTaskClick}\n                     onNewTaskChange={props.onNewTaskChange}\n                     addTodo={props.addTodo}\n                     newTask={props.newTask}\n                     addAllTodo={props.addAllTodo}\n                     addTodoComplited={props.addTodoComplited}\n                     todoDelete={props.todoDelete}\n        />\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        tasks: state.TaskReducer.tasks,\n        newTask: state.TaskReducer.newTask,\n        filterTodos: state.FilterReducer,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onAddTaskClick: () => {\n            dispatch(addTaskActionCreator())\n        },\n\n        onDeleteTaskClick: (taskID) => {\n            dispatch(deleteTaskActionCreator(taskID))\n        },\n\n        onComplitedTaskClick: (taskID) => {\n            dispatch(complitedTaskActionCreator(taskID))\n        },\n\n        onNewTaskChange: (text) => {\n            dispatch(updateNewTaskActionCreator(text))\n        },\n\n        addTodo: (message) => {\n            dispatch(addTodoActionCreator(message))\n        },\n\n        addAllTodo: () => {\n            dispatch(addTodoAllActionCreator())\n        },\n\n        addTodoComplited: (todoID, todoComplited) => {\n            dispatch(addTodoComplitedActionCreator(todoID, todoComplited))\n        },\n\n        todoDelete: (todoID) => {\n            dispatch(deleteTodoActionCreator(todoID))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TodoContainer)\n","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/Todo.jsx",["60","61","62"],"import React from 'react'\nimport TodoItem from \"./TodoItem/TodoItem\";\nimport './Todo.css'\nimport TodoFilter from \"./TodoFilter/TodoFilter\";\nimport {SORT_ALL_TASK, SORT_COMPLITED_TASK, SORT_CURRENT_TASK} from \"../../redux/FilterReducer\";\nimport {useMemo} from \"react\";\nimport {useEffect, useState} from \"react\";\n\n\nconst Todo = (props) => {\n\n    const [TODOS, setTODOS] = useState(props.tasks);\n    useEffect(() => {\n        props.addAllTodo()\n    }, TODOS);\n\n\n    let todos = props.tasks\n    let filterTodos = props.filterTodos\n\n    const getVisibleTodos = (filterTodos, todos) => {\n        switch (filterTodos) {\n            case SORT_ALL_TASK:\n                return todos\n            case SORT_COMPLITED_TASK:\n                return todos.filter(t => t.complited)\n            case SORT_CURRENT_TASK:\n                return todos.filter(t => !t.complited)\n            default:\n                throw new Error('Unknown filter: ' + filterTodos)\n        }\n    }\n\n    const memo = useMemo(() => getVisibleTodos(filterTodos, todos), [filterTodos, todos])\n\n    const validation = (value) => {\n        const reg = /^\\s*$/;\n        return reg.test(value) === false\n    }\n\n    let onAddTask = (e) => {\n        if (e.key === 'Enter' && validation(props.newTask)) {\n            console.log(props.newTask)\n            return (\n                props.addTodo(props.newTask)\n            )\n        }\n    }\n\n    let onChangeInput = (e) => {\n        let text = e.target.value\n        props.onNewTaskChange(text)\n    }\n\nconst cl = () => {\n    props.addTodo()\n}\n    return (\n        <div className=\"todo\">\n            <button onClick={cl}>Add</button>\n            <div className=\"todo__input-wrapper\">\n                <input\n                    className=\"todo__input\"\n                    type=\"text\"\n                    placeholder='Enter your task name here'\n                    value={props.newTask}\n                    onChange={onChangeInput}\n                    onKeyDown={onAddTask}\n                />\n            </div>\n            <div className=\"todo__list\">\n                <ul>\n                    {\n                        memo.map((task) => <TodoItem\n                            task={task}\n                            onDeleteTaskClick={props.onDeleteTaskClick}\n                            onComplitedTaskClick={props.onComplitedTaskClick}\n                            addTodoComplited={props.addTodoComplited}\n                            todoDelete={props.todoDelete}\n                            key={task.id}\n                        />)\n                    }\n\n                </ul>\n            </div>\n\n            {props.tasks.length > 0 && <TodoFilter />}\n        </div>\n    )\n}\n\nexport default Todo\n","/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoItem/TodoItem.jsx",[],"/home/user/work/todo-react-redux/src/components/TodoApp/Todo/TodoFilter/TodoFilter.jsx",[],"/home/user/work/todo-react-redux/src/components/redux/FormReducer.js",["63","64","65"],"/home/user/work/todo-react-redux/src/components/FormAuthorization/FormAuthorizationContainer.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":5,"nodeType":"72","messageId":"73","endLine":7,"endColumn":31},{"ruleId":"70","severity":1,"message":"74","line":12,"column":19,"nodeType":"72","messageId":"73","endLine":12,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":15,"column":8,"nodeType":"72","endLine":15,"endColumn":13},{"ruleId":"75","severity":1,"message":"77","line":15,"column":8,"nodeType":"72","endLine":15,"endColumn":13,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":2,"column":9,"nodeType":"72","messageId":"73","endLine":2,"endColumn":23},{"ruleId":"70","severity":1,"message":"80","line":2,"column":25,"nodeType":"72","messageId":"73","endLine":2,"endColumn":39},{"ruleId":"70","severity":1,"message":"81","line":2,"column":41,"nodeType":"72","messageId":"73","endLine":2,"endColumn":55},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'addTodoDeleteActionCreator' is defined but never used.","Identifier","unusedVar","'setTODOS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["84"],"'addTodoFailure' is defined but never used.","'addTodoStarted' is defined but never used.","'addTodoSuccess' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [props]",{"range":"87","text":"88"},[449,454],"[props]"]